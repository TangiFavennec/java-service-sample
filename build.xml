<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="java-service-sample" default="build"
         xsi:schemaLocation="antlib:org.apache.ivy.ant ">


    <property file="build.properties"/>

    <property name="compiler.debug" value="on"/>

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/*~/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.git/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.class"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.11" value="${jdk.home.11}/bin"/>
    <path id="jdk.classpath.11">
        <fileset dir="${jdk.home.11}"/>
    </path>

    <property name="jdk.home" value="${jdk.home.11}"/>
    <property name="jdk.bin" value="${jdk.bin.11}"/>
    <property name="jdk.classpath" value="jdk.classpath.11"/>
    <!-- Register Custom Compiler Taskdefs -->
    <property name="javac2.home" value="${idea.home}/lib"/>
    <path id="javac2.classpath">
        <fileset dir="${javac2.home}">
            <include name="javac2.jar"/>
            <include name="asm-all*.jar"/>
        </fileset>
    </path>
    <target name="register.custom.compilers">
        <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
        <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions"
                 classpathref="javac2.classpath"/>
    </target>

    <!-- Modules -->


    <!-- Module java-service-sample -->

    <path id="lib.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>
    <property name="lib.dir" value="lib.classpath"/>

    <dirname property="build.basedir" file="${ant.file}"/>
    <property name="target.dir" value="${build.basedir}/target"/>

    <property name="compiler.all.args" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>

    <property name="target.app.dir" value="${target.dir}/app"/>
    <property name="target.test.dir" value="${target.dir}/test"/>

    <path id="java-service-sample.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="java-service-sample.module.production.classpath">
        <path refid="${jdk.classpath}"/>
        <path refid="${lib.dir}"/>
    </path>

    <path id="java-service-sample.module.classpath">
        <path refid="${jdk.classpath}"/>
        <path refid="${lib.dir}"/>
        <pathelement location="${target.app.dir}"/>
    </path>

    <patternset id="excluded.files.from.compilation">
        <patternset refid="ignored.files"/>
    </patternset>

    <path id="java-service-sample.module.sourcepath">
        <dirset dir="${build.basedir}">
            <include name="src/app/java"/>
            <include name="src/app/resources"/>
        </dirset>
    </path>

    <path id="java-service-sample.module.test.sourcepath">
        <dirset dir="${build.basedir}">
            <include name="src/test/java"/>
            <include name="src/test/resources"/>
        </dirset>
    </path>


    <target name="compile.module.java-service-sample"
            depends="compile.module.java-service-sample.production,compile.module.java-service-sample.tests"
            description="Compile module java-service-sample"/>

    <target name="compile.module.java-service-sample.production"
            depends="register.custom.compilers"
            description="Compile module java-service-sample; production classes">
        <mkdir dir="${target.app.dir}"/>
        <javac2 destdir="${target.app.dir}"
                debug="${compiler.debug}"
                includeantruntime="false"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true"
                executable="${jdk.bin}/javac">
            <compilerarg line="${compiler.all.args}"/>
            <bootclasspath refid="java-service-sample.module.bootclasspath"/>
            <classpath refid="java-service-sample.module.production.classpath"/>
            <src refid="java-service-sample.module.sourcepath"/>
            <patternset refid="excluded.files.from.compilation"/>
        </javac2>

        <copy todir="${target.app.dir}">
            <fileset dir="${build.basedir}/src/app/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${build.basedir}/src/app/resources">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.java-service-sample.tests"
            depends="register.custom.compilers,compile.module.java-service-sample.production"
            description="compile module java-service-sample; test classes" unless="skip.tests">
        <mkdir dir="${target.test.dir}"/>
        <javac2 destdir="${target.test.dir}"
                debug="${compiler.debug}"
                includeantruntime="false"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true"
                executable="${jdk.bin}/javac">
            <compilerarg line="${compiler.all.args}"/>
            <bootclasspath refid="java-service-sample.module.bootclasspath"/>
            <classpath refid="java-service-sample.module.classpath"/>
            <src refid="java-service-sample.module.test.sourcepath"/>
            <patternset refid="excluded.files.from.compilation"/>
        </javac2>

        <copy todir="${target.test.dir}">
            <fileset dir="${build.basedir}/src/test/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${build.basedir}/src/test/resources">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="init">
        <ivy:settings file="./config/ivysettings.xml"/>
        <mkdir dir="dist"/>
    </target>

    <target name="load.dependencies.IntelliJ" description="Generate POM" depends="init">
        <fail message="Unset property: project.version" unless="sample.service.version"/>

        <delete file="${basedir}/pom.xml"/>

        <ivy:resolve file="${basedir}/ivy.xml" conf="default, test"/>
        <ivy:deliver deliverpattern="${basedir}/ivy.xml"
                     pubrevision="${sample.service.version}"
                     status="release"/>

        <ivy:makepom ivyfile="${basedir}/ivy.xml" pomfile="${basedir}/pom.xml"/>
    </target>

    <target name="clean.module.java-service-sample" description="cleanup module">
        <delete dir="${target.app.dir}"/>
        <delete dir="${target.test.dir}"/>
    </target>


    <target name="idea" depends="retrieve, load.dependencies.IntelliJ"/>

    <target name="retrieve" depends="init" description="--> retrieve dependencies with Ivy">
        <ivy:retrieve/>
    </target>

    <target name="clean-lib" description="cleanup lib jars">
        <delete file="${basedir}/pom.xml"/>
        <delete>
            <fileset dir="${build.basedir}/lib">
                <include name="*"/>
            </fileset>
        </delete>
    </target>

    <target name="clean" depends="clean.module.java-service-sample" description="cleanup app target files"/>

    <target name="clean-ivy" description="cleanup app target files">
        <ivy:cleancache description="clean ivy cache"/>
    </target>

    <target name="clean-all" depends="clean-ivy, clean, clean-lib" description="clean all"/>

    <target name="build" depends="init, clean, compile.module.java-service-sample"
            description="build all modules"/>
</project>